D addi x0,x1,1; add x0,x2,x11; sub x4,x10,x14 ;; lw x1,0(x2);RZ;MUXY;1 bit Branch Predictor
sw x10, 0(x11);addi x0,x1,1; add x0,x2,x11; sub x4,x10,x14 ;
C jal x1,loop;sw x10, 0(x11);addi x0,x1,1; add x0,x2,x11; sub x4,x10,x14

//if any of the instruction has D and C before it means data hazard and control hazard respectively //RZ and MUXY are showing that we need a data forwarding path between them // ';' is acting as the separator// 


Example:
First Clock cycle : 
Fetch stage: addi x0,x1,1 // This instruction has data hazard
Decode stage: add x0,x2,x11
Execute stage: sub x4,x10,x14
Memory stage: no instruction coming in first clock cylce
Write Back : lw , x1,0(x2)
Data forwarding path: From Rz to MUXY
1 bit Branch Predictor
Second clock cycle :
.....
....
